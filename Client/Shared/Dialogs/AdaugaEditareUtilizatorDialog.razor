@using global::Shared.DTOs
@using MudBlazor
@inject ISnackbar Snackbar

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            @(Utilizator?.Id > 0 ? "Editare utilizator" : "Adauga utilizator nou")
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudForm @ref="_form">
            <MudGrid>
                <MudItem xs="12">
                    <MudSelect T="int" Label="Persoana asociata" @bind-Value="_persoanaId" Required="true">
                        @if (Persoane != null)
                        {
                            @foreach (var persoana in Persoane)
                            {
                                <MudSelectItem Value="@persoana.Id">@($"{persoana.Nume} {persoana.Prenume}")</MudSelectItem>
                            }
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="12">
                    <MudTextField @bind-Value="@_numeUtilizator" Label="Nume utilizator" Required="true" />
                </MudItem>
                <MudItem xs="12">
                    <MudTextField @bind-Value="@_email" Label="Email" Required="true" />
                </MudItem>
                <MudItem xs="12">
                    <MudTextField @bind-Value="@_telefon" Label="Telefon" />
                </MudItem>
                <MudItem xs="12">
                    <MudTextField @bind-Value="@_parola" Label="Parola" 
                                InputType="@(_showPassword ? InputType.Text : InputType.Password)"
                                Adornment="Adornment.End"
                                AdornmentIcon="@(_showPassword ? Icons.Material.Filled.VisibilityOff : Icons.Material.Filled.Visibility)"
                                OnAdornmentClick="() => _showPassword = !_showPassword"
                                Required="@(Utilizator == null)" />
                    @if (Utilizator != null)
                    {
                        <MudText Typo="Typo.caption" Color="Color.Info">
                            Lasati gol pentru a pastra parola neschimbata
                        </MudText>
                    }
                </MudItem>
            </MudGrid>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Anuleaza</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit" Disabled="@_isBusy">
            @if (_isBusy)
            {
                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                <MudText Class="ms-2">Se proceseaza...</MudText>
            }
            else
            {
                <MudText>Salveaza</MudText>
            }
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudBlazor.IMudDialogInstance MudDialog { get; set; }

    [Parameter] public UtilizatorDTO Utilizator { get; set; }
    [Parameter] public List<PersoanaDTO> Persoane { get; set; } = new();

    private MudForm _form;
    private bool _isBusy = false;
    private bool _showPassword = false;
    
    // Fields to store form values
    private int _persoanaId;
    private string _numeUtilizator = "";
    private string _email = "";
    private string _telefon = "";
    private string _parola = "";
    private int? _id = null;

    protected override void OnInitialized()
    {
        if (Utilizator != null)
        {
            // Load existing user data
            _id = Utilizator.Id;
            _persoanaId = Utilizator.PersoanaId;
            _numeUtilizator = Utilizator.NumeUtilizator;
            _email = Utilizator.Email;
            _telefon = Utilizator.Telefon ?? "";
            _parola = ""; // Leave empty for password field
        }
        else
        {
            // Initialize with defaults for new user
            _persoanaId = Persoane.FirstOrDefault()?.Id ?? 0;
        }
    }

    async Task Submit()
    {
        await _form.Validate();

        if (_form.IsValid)
        {
            _isBusy = true;
            
            try
            {
                // Validate fields
                if (string.IsNullOrEmpty(_numeUtilizator))
                {
                    Snackbar.Add("Numele utilizatorului este obligatoriu", Severity.Warning);
                    _isBusy = false;
                    return;
                }

                if (string.IsNullOrEmpty(_email))
                {
                    Snackbar.Add("Email-ul este obligatoriu", Severity.Warning);
                    _isBusy = false;
                    return;
                }

                if (Utilizator == null && string.IsNullOrEmpty(_parola))
                {
                    Snackbar.Add("Parola este obligatorie pentru utilizatori noi", Severity.Warning);
                    _isBusy = false;
                    return;
                }

                await Task.Delay(300); // Simulate network delay for better UX

                if (_id.HasValue)
                {
                    // Return update DTO if editing
                    var updateDto = new UpdateUtilizatorDTO
                    {
                        Id = _id.Value,
                        Guid = Utilizator.Guid, // Make sure to include the Guid
                        PersoanaId = _persoanaId,
                        NumeUtilizator = _numeUtilizator,
                        Email = _email,
                        Telefon = _telefon,
                        Parola = _parola
                    };
                    MudDialog.Close(DialogResult.Ok(updateDto));
                }
                else
                {
                    // Return create DTO if adding new
                    var createDto = new CreateUtilizatorDTO
                    {
                        PersoanaId = _persoanaId,
                        NumeUtilizator = _numeUtilizator,
                        Email = _email,
                        Telefon = _telefon,
                        Parola = _parola
                    };
                    MudDialog.Close(DialogResult.Ok(createDto));
                }
            }
            catch (Exception ex)
            {
                Snackbar.Add($"A aparut o eroare: {ex.Message}", Severity.Error);
                _isBusy = false;
            }
        }
        else
        {
            Snackbar.Add("Va rugam sa completati toate câmpurile obligatorii", Severity.Warning);
        }
    }

    void Cancel() => MudDialog.Cancel();
}