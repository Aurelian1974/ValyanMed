@page "/medical/pacienti"
@using global::Shared.DTOs.Medical
@using global::Shared.Models.Medical
@using global::Shared.Common
@using MudBlazor
@inherits PatientListBase
@attribute [Authorize]

<PageTitle>Pacienti - ValyanMed</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4">
    <MudStack Spacing="3">
        <!-- Header Section -->
        <MudStack Row Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center">
            <MudText Typo="Typo.h4">Gestionare Pacienti</MudText>
            <MudButton StartIcon="@Icons.Material.Filled.PersonAdd" 
                      Color="Color.Primary" 
                      Variant="Variant.Filled"
                      OnClick="@CreateNewPatient">
                Pacient Nou
            </MudButton>
        </MudStack>

        <!-- Search and Filters -->
        <MudPaper Class="pa-4 search-bar-compact">
            <MudStack Row Spacing="2" AlignItems="AlignItems.Center">
                <MudTextField T="string"
                             Value="@State.SearchQuery.Search"
                             ValueChanged="@OnSearchChanged"
                             Label="Cauta pacienti..." 
                             Placeholder="Nume, prenume, CNP sau email"
                             Variant="Variant.Outlined" 
                             Adornment="Adornment.End" 
                             AdornmentIcon="@Icons.Material.Filled.Search"
                             OnAdornmentClick="@SearchPacienti"
                             OnKeyUp="@OnSearchKeyUp"
                             Immediate="false"
                             Clearable="true"
                             Dense="true"
                             Class="flex-grow-1 search-compact" />

                <MudSelect T="string"
                          Value="@State.SearchQuery.Judet"
                          ValueChanged="@OnJudetChanged"
                          Label="Judet"
                          Variant="Variant.Outlined"
                          Clearable="true"
                          Dense="true"
                          Class="search-compact"
                          Style="min-width: 120px;">
                    <MudSelectItem T="string" Value="@string.Empty">Toate judetele</MudSelectItem>
                    <MudSelectItem T="string" Value="@("Bucuresti")">Bucuresti</MudSelectItem>
                    <MudSelectItem T="string" Value="@("Cluj")">Cluj</MudSelectItem>
                    <MudSelectItem T="string" Value="@("Timis")">Timis</MudSelectItem>
                    <MudSelectItem T="string" Value="@("Iasi")">Iasi</MudSelectItem>
                    <MudSelectItem T="string" Value="@("Constanta")">Constanta</MudSelectItem>
                    <MudSelectItem T="string" Value="@("Brasov")">Brasov</MudSelectItem>
                    <MudSelectItem T="string" Value="@("Dolj")">Dolj</MudSelectItem>
                    <MudSelectItem T="string" Value="@("Galati")">Galati</MudSelectItem>
                    <MudSelectItem T="string" Value="@("Prahova")">Prahova</MudSelectItem>
                    <MudSelectItem T="string" Value="@("Bihor")">Bihor</MudSelectItem>
                </MudSelect>

                <MudSelect T="string"
                          Value="@State.SearchQuery.Gen"
                          ValueChanged="@OnGenChanged"
                          Label="Gen"
                          Variant="Variant.Outlined"
                          Clearable="true"
                          Dense="true"
                          Class="search-compact"
                          Style="min-width: 100px;">
                    <MudSelectItem T="string" Value="@string.Empty">Toate</MudSelectItem>
                    <MudSelectItem T="string" Value="@("Masculin")">Masculin</MudSelectItem>
                    <MudSelectItem T="string" Value="@("Feminin")">Feminin</MudSelectItem>
                    <MudSelectItem T="string" Value="@("Neprecizat")">Neprecizat</MudSelectItem>
                </MudSelect>

                <MudButton StartIcon="@Icons.Material.Filled.UnfoldLess" 
                          Color="Color.Secondary" 
                          Variant="Variant.Outlined"
                          OnClick="@CollapseAllRows"
                          Size="Size.Small">
                    Collapse
                </MudButton>

                <MudButton StartIcon="@Icons.Material.Filled.UnfoldMore" 
                          Color="Color.Secondary" 
                          Variant="Variant.Outlined"
                          OnClick="@ExpandAllRows"
                          Size="Size.Small">
                    Expand
                </MudButton>

                <MudButton StartIcon="@Icons.Material.Filled.Refresh" 
                          Color="Color.Secondary" 
                          Variant="Variant.Outlined"
                          OnClick="@ResetFilters">
                    Reset
                </MudButton>
            </MudStack>
        </MudPaper>

        <!-- Results Summary -->
        @if (!State.IsLoading && State.PagedResult.Items?.Any() == true)
        {
            <MudAlert Severity="MudBlazor.Severity.Info" Dense="true">
                Afisati: @State.PagedResult.Items.Count() din @State.PagedResult.TotalCount pacienti totali
                (Pagina @State.SearchQuery.Page din @State.PagedResult.TotalPages)
            </MudAlert>
        }

        <!-- Data Grid with master-detail -->
        @if (State.IsLoading)
        {
            <MudDataGrid T="PacientListDto" Items="@(new List<PacientListDto>())" Loading="true">
                <LoadingContent>
                    <MudStack AlignItems="AlignItems.Center" Spacing="2" Class="pa-8">
                        <MudProgressCircular Indeterminate="true" />
                        <MudText Typo="Typo.body1">Se incarca pacientii...</MudText>
                    </MudStack>
                </LoadingContent>
            </MudDataGrid>
        }
        else
        {
            <MudDataGrid T="PacientListDto" 
                        Items="@State.PagedResult.Items" 
                        Loading="false"
                        Dense="true"
                        Hover="true"
                        ReadOnly="true"
                        Filterable="false"
                        Hideable="true"
                        HasDetailRow="true"
                        ColumnResizeMode="ResizeMode.Container"
                        SortMode="SortMode.Multiple">
                <Columns>
                    <!-- Coloana de expansiune -->
                    <TemplateColumn Title="" Sortable="false" Filterable="false" Class="mud-width-xs">
                        <CellTemplate>
                            <MudIconButton Icon="@(State.IsRowExpanded(context.Item.PacientID) ? Icons.Material.Filled.ExpandLess : Icons.Material.Filled.ExpandMore)" 
                                          Size="Size.Small" 
                                          Color="Color.Default"
                                          OnClick="@(() => ToggleRowExpansion(context.Item.PacientID))" />
                        </CellTemplate>
                    </TemplateColumn>
                    
                    <PropertyColumn Property="x => x.NumeComplet" Title="Nume Complet" Sortable="true" />
                    <TemplateColumn Title="CNP" Sortable="true" SortBy="@(x => x.CNP)">
                        <CellTemplate>
                            @if (!string.IsNullOrEmpty(context.Item.CNP))
                            {
                                <MudText Typo="Typo.body2" Style="font-family: monospace;">
                                    @context.Item.CNP
                                </MudText>
                            }
                            else
                            {
                                <MudText Color="Color.Surface">-</MudText>
                            }
                        </CellTemplate>
                    </TemplateColumn>
                    <TemplateColumn Title="Varsta" Sortable="true" SortBy="@(x => x.DataNasterii)">
                        <CellTemplate>
                            <MudText Typo="Typo.body2">@context.Item.Varsta ani</MudText>
                        </CellTemplate>
                    </TemplateColumn>
                    <TemplateColumn Title="Gen" Sortable="true" SortBy="@(x => x.Gen)">
                        <CellTemplate>
                            <MudChip T="string" Size="Size.Small" 
                                    Color="@(context.Item.Gen == "Masculin" ? Color.Primary : context.Item.Gen == "Feminin" ? Color.Secondary : Color.Default)">
                                @context.Item.Gen
                            </MudChip>
                        </CellTemplate>
                    </TemplateColumn>
                    <TemplateColumn Title="Contact" Sortable="true" SortBy="@(x => x.Email)">
                        <CellTemplate>
                            @if (!string.IsNullOrEmpty(context.Item.Telefon))
                            {
                                <MudLink Href="@($"tel:{context.Item.Telefon}")" Typo="Typo.body2">
                                    @context.Item.Telefon
                                </MudLink>
                            }
                            @if (string.IsNullOrEmpty(context.Item.Telefon))
                            {
                                <MudText Color="Color.Surface">-</MudText>
                            }
                        </CellTemplate>
                    </TemplateColumn>
                    <TemplateColumn Title="Data Inregistrarii" Sortable="true" SortBy="@(x => x.DataCreare)">
                        <CellTemplate>
                            @context.Item.DataCreare.ToString("dd.MM.yyyy HH:mm")
                        </CellTemplate>
                    </TemplateColumn>
                    <TemplateColumn Title="Actiuni" Sortable="false" Filterable="false">
                        <CellTemplate>
                            <div class="patient-action-buttons d-flex gap-1" style="display: flex; gap: 4px; align-items: center;">
                                <MudTooltip Text="Vezi detalii">
                                    <MudIconButton Icon="@Icons.Material.Filled.Visibility"
                                                  Color="Color.Primary"
                                                  Size="Size.Small"
                                                  Variant="Variant.Text"
                                                  Style="min-width: 32px; height: 32px; padding: 4px;"
                                                  OnClick="() => ViewPacient(context.Item.PacientID)" />
                                </MudTooltip>
                                <MudTooltip Text="Editeaza">
                                    <MudIconButton Icon="@Icons.Material.Filled.Edit"
                                                  Color="Color.Secondary"
                                                  Size="Size.Small"
                                                  Variant="Variant.Text"
                                                  Style="min-width: 32px; height: 32px; padding: 4px;"
                                                  OnClick="() => EditPacient(context.Item.PacientID)" />
                                </MudTooltip>
                                <MudTooltip Text="Programare noua">
                                    <MudIconButton Icon="@Icons.Material.Filled.EventAvailable"
                                                  Color="Color.Success"
                                                  Size="Size.Small"
                                                  Variant="Variant.Text"
                                                  Style="min-width: 32px; height: 32px; padding: 4px;"
                                                  OnClick="() => NewAppointment(context.Item.PacientID)" />
                                </MudTooltip>
                                <MudTooltip Text="Istoric medical">
                                    <MudIconButton Icon="@Icons.Material.Filled.Assignment"
                                                  Color="Color.Info"
                                                  Size="Size.Small"
                                                  Variant="Variant.Text"
                                                  Style="min-width: 32px; height: 32px; padding: 4px;"
                                                  OnClick="() => ViewMedicalHistory(context.Item.PacientID)" />
                                </MudTooltip>
                            </div>
                        </CellTemplate>
                    </TemplateColumn>
                </Columns>

                <ChildRowContent>
                    @if (State.IsRowExpanded(context.Item.PacientID))
                    {
                        <MudPaper Class="pa-4" Elevation="0" Style="border-left: 4px solid var(--mud-palette-primary); background: linear-gradient(90deg, var(--mud-palette-primary-lighten) 0%, var(--mud-palette-background-grey) 5%);">
                            <MudStack Row Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center" Class="mb-3">
                                <MudText Typo="Typo.subtitle1" Color="Color.Primary" Class="font-weight-bold">
                                    <MudIcon Icon="@Icons.Material.Filled.Info" Size="Size.Small" Class="mr-2" />
                                    Detalii pacient: @context.Item.NumeComplet
                                </MudText>
                                <MudIconButton Icon="@Icons.Material.Filled.Close" 
                                              Size="Size.Small" 
                                              Color="Color.Default"
                                              OnClick="@(() => ToggleRowExpansion(context.Item.PacientID))" />
                            </MudStack>
                            
                            <MudGrid Spacing="3">
                                <MudItem xs="12" sm="6" md="3">
                                    <MudStack Spacing="1">
                                        <MudText Typo="Typo.caption" Class="font-weight-bold mud-text-secondary">ID PACIENT</MudText>
                                        <MudText Typo="Typo.body2" Class="font-weight-medium">#@context.Item.PacientID</MudText>
                                    </MudStack>
                                </MudItem>
                                <MudItem xs="12" sm="6" md="3">
                                    <MudStack Spacing="1">
                                        <MudText Typo="Typo.caption" Class="font-weight-bold mud-text-secondary">CNP</MudText>
                                        <MudText Typo="Typo.body2" Class="font-weight-medium" Style="font-family: monospace;">
                                            @(context.Item.CNP ?? "Nespecificat")
                                        </MudText>
                                    </MudStack>
                                </MudItem>
                                <MudItem xs="12" sm="6" md="3">
                                    <MudStack Spacing="1">
                                        <MudText Typo="Typo.caption" Class="font-weight-bold mud-text-secondary">ADRESA</MudText>
                                        <MudText Typo="Typo.body2">
                                            @if (!string.IsNullOrEmpty(context.Item.Oras) || !string.IsNullOrEmpty(context.Item.Judet))
                                            {
                                                <MudIcon Icon="@Icons.Material.Filled.LocationOn" Size="Size.Small" Class="mr-1" />
                                                @(context.Item.Oras ?? "")@((!string.IsNullOrEmpty(context.Item.Oras) && !string.IsNullOrEmpty(context.Item.Judet)) ? ", " : "")@(context.Item.Judet ?? "")
                                            }
                                            else
                                            {
                                                <MudText Color="Color.Surface" Typo="Typo.body2">Nu este specificata</MudText>
                                            }
                                        </MudText>
                                    </MudStack>
                                </MudItem>
                                <MudItem xs="12" sm="6" md="3">
                                    <MudStack Spacing="1">
                                        <MudText Typo="Typo.caption" Class="font-weight-bold mud-text-secondary">INREGISTRAT LA</MudText>
                                        <MudText Typo="Typo.body2">
                                            <MudIcon Icon="@Icons.Material.Filled.CalendarToday" Size="Size.Small" Class="mr-1" />
                                            @context.Item.DataCreare.ToString("dd.MM.yyyy")
                                            <br />
                                            <MudText Typo="Typo.caption" Class="mud-text-secondary">
                                                <MudIcon Icon="@Icons.Material.Filled.AccessTime" Size="Size.Small" Class="mr-1" />
                                                @context.Item.DataCreare.ToString("HH:mm")
                                            </MudText>
                                        </MudText>
                                    </MudStack>
                                </MudItem>
                                <MudItem xs="12" sm="6" md="3">
                                    <MudStack Spacing="1">
                                        <MudText Typo="Typo.caption" Class="font-weight-bold mud-text-secondary">DATA NASTERII</MudText>
                                        <MudText Typo="Typo.body2">
                                            @context.Item.DataNasterii.ToString("dd.MM.yyyy")
                                        </MudText>
                                    </MudStack>
                                </MudItem>
                                <MudItem xs="12" sm="6" md="3">
                                    <MudStack Spacing="1">
                                        <MudText Typo="Typo.caption" Class="font-weight-bold mud-text-secondary">EMAIL</MudText>
                                        <MudText Typo="Typo.body2">
                                            @if (!string.IsNullOrEmpty(context.Item.Email))
                                            {
                                                <MudLink Href="@($"mailto:{context.Item.Email}")" Typo="Typo.body2">
                                                    @context.Item.Email
                                                </MudLink>
                                            }
                                            else
                                            {
                                                <MudText Color="Color.Surface">-</MudText>
                                            }
                                        </MudText>
                                    </MudStack>
                                </MudItem>
                            </MudGrid>
                        </MudPaper>
                    }
                </ChildRowContent>

                <NoRecordsContent>
                    <MudStack AlignItems="AlignItems.Center" Spacing="2" Class="pa-8">
                        <MudIcon Icon="@Icons.Material.Filled.People" Size="Size.Large" Color="Color.Surface" />
                        <MudText Typo="Typo.body1" Color="Color.Surface">
                            @if (string.IsNullOrEmpty(State.SearchQuery.Search) && string.IsNullOrEmpty(State.SearchQuery.Judet) && string.IsNullOrEmpty(State.SearchQuery.Gen))
                            {
                                @:Nu au fost gasiti pacienti
                            }
                            else
                            {
                                @:Nu au fost gasiti pacienti care sa corespunda criteriilor de cautare
                            }
                        </MudText>
                        @if (!string.IsNullOrEmpty(State.SearchQuery.Search) || !string.IsNullOrEmpty(State.SearchQuery.Judet) || !string.IsNullOrEmpty(State.SearchQuery.Gen))
                        {
                            <MudButton StartIcon="@Icons.Material.Filled.ClearAll" OnClick="@ResetFilters">
                                Reseteaza filtrele
                            </MudButton>
                        }
                    </MudStack>
                </NoRecordsContent>
            </MudDataGrid>
        }

        <!-- Pagination - compact and with page info next to pagination -->
        @if (!State.IsLoading && State.PagedResult.TotalCount > 0)
        {
            <MudPaper Class="pa-2 pagination-compact">
                <MudStack Row Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center">
                    <MudStack Row AlignItems="AlignItems.Center" Spacing="1">
                        <MudSelect T="int"
                                  Value="@State.SearchQuery.PageSize"
                                  ValueChanged="@OnPageSizeChanged"
                                  Label="Rezultate per pagina"
                                  Variant="Variant.Outlined"
                                  Dense="true"
                                  Class="pagination-select-compact"
                                  Style="min-width: 120px; max-width: 160px;">
                            <MudSelectItem T="int" Value="5">5 rezultate</MudSelectItem>
                            <MudSelectItem T="int" Value="10">10 rezultate</MudSelectItem>
                            <MudSelectItem T="int" Value="25">25 rezultate</MudSelectItem>
                            <MudSelectItem T="int" Value="50">50 rezultate</MudSelectItem>
                            <MudSelectItem T="int" Value="100">100 rezultate</MudSelectItem>
                        </MudSelect>
                        <MudText Typo="Typo.caption" Color="Color.Secondary" Class="ml-2">
                            Pagina @State.SearchQuery.Page din @State.PagedResult.TotalPages
                        </MudText>
                    </MudStack>
                    <MudPagination Count="State.PagedResult.TotalPages" 
                                  Selected="State.SearchQuery.Page"
                                  SelectedChanged="OnPageChanged"
                                  ShowFirstButton="true"
                                  ShowLastButton="true"
                                  ShowPreviousButton="true"
                                  ShowNextButton="true"
                                  BoundaryCount="2"
                                  MiddleCount="3"
                                  Class="pagination-compact" />
                </MudStack>
            </MudPaper>
        }
    </MudStack>
</MudContainer>

<style>
    .search-bar-compact {
        padding-top: 8px !important;
        padding-bottom: 8px !important;
    }
    .search-compact .mud-input-root, .search-compact .mud-select-root {
        min-height: 32px !important;
        height: 32px !important;
        font-size: 0.95rem;
    }
    .pagination-compact .mud-select-root, .pagination-select-compact .mud-select-root {
        min-height: 32px !important;
        height: 32px !important;
        font-size: 0.95rem;
    }
    .pagination-compact .mud-pagination {
        min-height: 32px !important;
        height: 32px !important;
    }
    .pagination-compact .mud-pagination-item {
        min-width: 32px !important;
        height: 32px !important;
        font-size: 0.95rem;
    }
</style>

@code {
    // All logic is in PatientListBase
}