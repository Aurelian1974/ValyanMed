@page "/"
@inject NavigationManager Navigation
@inject IJSRuntime JS

<div class="redirect-container">
    <div class="redirect-spinner"></div>
    <p>Se încarc? aplica?ia...</p>
</div>

<style>
    .redirect-container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        flex-direction: column;
    }
    .redirect-spinner {
        width: 40px;
        height: 40px;
        border: 4px solid #f3f3f3;
        border-top: 4px solid #1976d2;
        border-radius: 50%;
        animation: spin 1s linear infinite;
        margin-bottom: 16px;
    }
    
    @@keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
</style>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                // Wait a bit for everything to initialize
                await Task.Delay(500);
                
                // Check if there's a token in localStorage
                var token = await JS.InvokeAsync<string>("localStorage.getItem", "authToken");
                
                if (string.IsNullOrEmpty(token))
                {
                    Navigation.NavigateTo("/login");
                }
                else
                {
                    Navigation.NavigateTo("/dashboard");
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Index redirect error: {ex.Message}");
                // In case of error, redirect to login
                Navigation.NavigateTo("/login");
            }
        }
    }
}
