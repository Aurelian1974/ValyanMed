@page "/authentication/persoane"
@page "/persoane"
@inherits PersoaneBase
@attribute [Authorize]

<PageTitle>Gestionare Persoane - ValyanMed</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4">
    <MudStack Spacing="3">

        <!-- Header Section -->
        <MudStack Row Justify="Justify.SpaceBetween" AlignItems="MudAlignItems.Center">
            <MudText Typo="Typo.h4">Gestionare Persoane</MudText>
            <MudButton StartIcon="@Icons.Material.Filled.Add" 
                      Color="MudColor.Primary" 
                      Variant="MudVariant.Filled"
                      OnClick="@OpenCreatePersonDialog">
                Adauga Persoana
            </MudButton>
        </MudStack>

        <!-- Search and Filters -->
        <MudPaper Class="pa-4">
            <MudStack Row Spacing="2" AlignItems="MudAlignItems.Center">
                <MudTextField @bind-Value="State.SearchTerm" 
                             Label="Cauta persoane..." 
                             Variant="MudVariant.Outlined" 
                             Adornment="Adornment.End" 
                             AdornmentIcon="@Icons.Material.Filled.Search"
                             OnAdornmentClick="@FilterPersons"
                             OnKeyUp="@OnSearchKeyUp"
                             Immediate="false"
                             Class="flex-grow-1" />

                <MudButton StartIcon="@Icons.Material.Filled.Refresh" 
                          Color="MudColor.Secondary" 
                          Variant="MudVariant.Outlined"
                          OnClick="@ResetFilters">
                    Reset
                </MudButton>
            </MudStack>
        </MudPaper>

        <!-- Results Summary -->
        @if (!State.IsLoading && State.Persons.Any())
        {
            <MudAlert Severity="MudSeverity.Info" Dense="true">
                Afisati: @State.FilteredPersons.Count() din @State.Persons.Count() persoane totale
            </MudAlert>
        }

        <!-- Data Grid -->
        <MudDataGrid T="Persoana" 
                    Items="@State.FilteredPersons" 
                    Loading="@State.IsLoading"
                    Dense="true"
                    Hover="true"
                    ReadOnly="true"
                    Filterable="false"
                    Hideable="true"
                    ColumnResizeMode="ResizeMode.Container"
                    SortMode="SortMode.Multiple">
            
            <Columns>
                <PropertyColumn Property="x => x.Id" Title="ID" Sortable="true" />
                <PropertyColumn Property="x => x.NumeComplet" Title="Nume Complet" Sortable="true" />
                
                <TemplateColumn Title="CNP" Sortable="true" SortBy="@(x => x.CNP)">
                    <CellTemplate>
                        @if (!string.IsNullOrEmpty(context.Item.CNP))
                        {
                            @context.Item.CNP
                        }
                        else
                        {
                            <MudText Color="MudColor.Surface">-</MudText>
                        }
                    </CellTemplate>
                </TemplateColumn>
                
                <TemplateColumn Title="Data Nasterii" Sortable="true" SortBy="@(x => x.DataNasterii)">
                    <CellTemplate>
                        @if (context.Item.DataNasterii.HasValue)
                        {
                            @context.Item.DataNasterii.Value.ToString("dd.MM.yyyy")
                        }
                        else
                        {
                            <MudText Color="MudColor.Surface">-</MudText>
                        }
                    </CellTemplate>
                </TemplateColumn>

                <TemplateColumn Title="Locatie" Sortable="true" SortBy="@(x => x.Localitate)">
                    <CellTemplate>
                        @if (!string.IsNullOrEmpty(context.Item.Localitate) || !string.IsNullOrEmpty(context.Item.Judet))
                        {
                            <MudText>
                                @if (!string.IsNullOrEmpty(context.Item.Localitate))
                                {
                                    @context.Item.Localitate
                                }
                                @if (!string.IsNullOrEmpty(context.Item.Judet) && !string.IsNullOrEmpty(context.Item.Localitate))
                                {
                                    @:, 
                                }
                                @if (!string.IsNullOrEmpty(context.Item.Judet))
                                {
                                    @context.Item.Judet
                                }
                            </MudText>
                        }
                        else
                        {
                            <MudText Color="MudColor.Surface">-</MudText>
                        }
                    </CellTemplate>
                </TemplateColumn>

                <TemplateColumn Title="Pozitie" Sortable="true" SortBy="@(x => x.PozitieOrganizatie)">
                    <CellTemplate>
                        @if (!string.IsNullOrEmpty(context.Item.PozitieOrganizatie))
                        {
                            @context.Item.PozitieOrganizatie
                        }
                        else
                        {
                            <MudText Color="MudColor.Surface">-</MudText>
                        }
                    </CellTemplate>
                </TemplateColumn>
                
                <TemplateColumn Title="Data Creare" Sortable="true" SortBy="@(x => x.DataCreare)">
                    <CellTemplate>
                        @if (context.Item.DataCreare.HasValue)
                        {
                            @context.Item.DataCreare.Value.ToString("dd.MM.yyyy HH:mm")
                        }
                        else
                        {
                            <MudText Color="MudColor.Surface">-</MudText>
                        }
                    </CellTemplate>
                </TemplateColumn>

                <TemplateColumn Title="Actiuni" Sortable="false" Filterable="false">
                    <CellTemplate>
                        <MudStack Row Spacing="1">
                            <MudTooltip Text="Editeaza persoana">
                                <MudIconButton Icon="@Icons.Material.Filled.Edit" 
                                              Size="Size.Small" 
                                              Color="MudColor.Primary"
                                              OnClick="@(() => OpenEditPersonDialog(context.Item))" />
                            </MudTooltip>
                            <MudTooltip Text="Sterge persoana">
                                <MudIconButton Icon="@Icons.Material.Filled.Delete" 
                                              Size="Size.Small" 
                                              Color="MudColor.Error"
                                              OnClick="@(() => DeletePerson(context.Item))" />
                            </MudTooltip>
                        </MudStack>
                    </CellTemplate>
                </TemplateColumn>
            </Columns>

            <NoRecordsContent>
                <MudStack AlignItems="MudAlignItems.Center" Spacing="2" Class="pa-8">
                    <MudIcon Icon="@Icons.Material.Filled.People" Size="Size.Large" Color="MudColor.Surface" />
                    <MudText Typo="Typo.body1" Color="MudColor.Surface">
                        @if (string.IsNullOrEmpty(State.SearchTerm))
                        {
                            @:Nu au fost gasite persoane
                        }
                        else
                        {
                            @:Nu au fost gasite persoane care sa corespunda criteriilor de cautare
                        }
                    </MudText>
                    @if (!string.IsNullOrEmpty(State.SearchTerm))
                    {
                        <MudButton StartIcon="@Icons.Material.Filled.ClearAll" OnClick="@ResetFilters">
                            Reseteaza filtrele
                        </MudButton>
                    }
                </MudStack>
            </NoRecordsContent>

            <LoadingContent>
                <MudStack AlignItems="MudAlignItems.Center" Spacing="2" Class="pa-8">
                    <MudProgressCircular Indeterminate="true" />
                    <MudText Typo="Typo.body1">Se incarca persoanele...</MudText>
                </MudStack>
            </LoadingContent>
        </MudDataGrid>
    </MudStack>
</MudContainer>

@code {
    [Inject] NavigationManager Navigation { get; set; } = null!;

    private string GetCurrentRoute()
    {
        return Navigation.Uri;
    }
}